<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd

        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

    <context:property-placeholder location="classpath:application.properties"/>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <context:component-scan base-package="cn.com.liucm"/>

    <!-- alibaba开源druid连接池 -->
    <bean id="procurementDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="url" value="${procurementDataSource.url}"/>
        <property name="username" value="${procurementDataSource.username}"/>
        <property name="password" value="${procurementDataSource.password}"/>
        <property name="filters" value="log4j,mergeStat"/>
        <property name="maxActive" value="${procurementDataSource.maxActive}"/>
        <property name="initialSize" value="${procurementDataSource.initialSize}"/>
        <property name="maxWait" value="${procurementDataSource.maxWait}"/>
        <property name="minIdle" value="${procurementDataSource.minIdle}"/>
        <property name="timeBetweenEvictionRunsMillis"
                  value="${procurementDataSource.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${procurementDataSource.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="SELECT 1 FROM dual"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="connectionProperties" value="druid.stat.slowSqlMillis=5000"/>
    </bean>

    <!-- 配置SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="procurementDataSource"/>
        <property name="configLocation" value="classpath:mybatis/Configuration.xml"/>
        <!-- mapper配置路径 -->
        <property name="mapperLocations">
            <list>
                <value>classpath:mybatis/mapper/*-mapper.xml</value>
            </list>
        </property>
    </bean>

    <bean id="batchMapper" class="cn.com.liucm.mapper.BatchMapper">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!-- 通过扫描的模式，所有的mapper都继承SqlMapper接口的接口， 这样一个bean就可以了 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.com.liucm.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="procurementDataSource"/>
    </bean>

    <!-- 异步线程池 -->
    <bean id="threadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 核心线程数  -->
        <property name="corePoolSize" value="2"/>
        <!-- 最大线程数 -->
        <property name="maxPoolSize" value="50"/>
        <!-- 队列最大长度 >=mainExecutor.maxSize -->
        <property name="queueCapacity" value="10000"/>
        <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="300"/>
        <!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy"/>
        </property>
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>message.base</value>
                <value>message.procurement</value>
            </list>
        </property>
    </bean>

    <bean id="freemarkerConfigurer"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/pages/"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="defaultEncoding">UTF-8</prop>
            </props>
        </property>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="order" value="1"/>
        <property name="cache" value="false"/>
        <property name="suffix" value=".html"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="contentType" value="text/html;charset=UTF-8"></property>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize"><value>500000000</value></property>
        <property name="maxInMemorySize"><value>500000000</value></property>
        <property name="defaultEncoding"><value>UTF-8</value></property>
    </bean>
</beans>